/*  -*- buffer-read-only: t -*- vi: set ro:
 *
 *  DO NOT EDIT THIS FILE   (expr.ini)
 *
 *  It has been AutoGen-ed  July 14, 2013 at 05:37:28 PM by AutoGen 5.18
 *  From the definitions    expr.def
 *  and the template file   snarf.tpl
 *
 *  Copyright (C) 1992-2013 Bruce Korb - all rights reserved
 *
 *  AutoGen is free software: you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as published by the
 *  Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  AutoGen is distributed in the hope that it will be useful, but
 *  WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *  See the GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/** \file expr.ini
 *
 * Guile Initializations - autogen Global Variables
 *
 * @addtogroup autogen
 * @{
 */
#include "expr.h"
typedef SCM (*scm_callback_t)(void);
void ag_init(void);

#if GUILE_VERSION >= 108000
#define NEW_PROC(_As, _Ar, _Ao, _Ax, _An)   \
  scm_c_define_gsubr((char*)(_As),          \
                   _Ar, _Ao, _Ax, (scm_callback_t)(void*)ag_scm_ ## _An)
#else
#define NEW_PROC(_As, _Ar, _Ao, _Ax, _An)                                   \
  gh_new_procedure((char*)(_As), (scm_callback_t)(void*)ag_scm_ ## _An,     \
                   _Ar, _Ao, _Ax)
#endif

/**
 * autogen Initialization procedure.
 */
void
ag_init(void)
{
static char const g_nm[1088] =
/*     0 */ "ag-fprintf\0"
/*    11 */ "ag-function?\0"
/*    24 */ "agpl\0"
/*    29 */ "base-name\0"
/*    39 */ "bsd\0"
/*    43 */ "c-string\0"
/*    52 */ "chdir\0"
/*    58 */ "count\0"
/*    64 */ "def-file\0"
/*    73 */ "def-file-line\0"
/*    87 */ "dne\0"
/*    91 */ "emit\0"
/*    96 */ "error\0"
/*   102 */ "error-source-line\0"
/*   120 */ "exist?\0"
/*   127 */ "extract\0"
/*   135 */ "find-file\0"
/*   145 */ "first-for?\0"
/*   156 */ "for-by\0"
/*   163 */ "for-from\0"
/*   172 */ "for-index\0"
/*   182 */ "for-sep\0"
/*   190 */ "for-to\0"
/*   197 */ "format-arg-count\0"
/*   214 */ "found-for?\0"
/*   225 */ "fprintf\0"
/*   233 */ "get\0"
/*   237 */ "get-c-name\0"
/*   248 */ "get-down-name\0"
/*   262 */ "get-up-name\0"
/*   274 */ "gperf\0"
/*   280 */ "gpl\0"
/*   284 */ "hide-email\0"
/*   295 */ "high-lim\0"
/*   304 */ "in?\0"
/*   308 */ "join\0"
/*   313 */ "kr-string\0"
/*   323 */ "last-for?\0"
/*   333 */ "len\0"
/*   337 */ "lgpl\0"
/*   342 */ "license\0"
/*   350 */ "license-description\0"
/*   370 */ "license-full\0"
/*   383 */ "license-info\0"
/*   396 */ "license-name\0"
/*   409 */ "low-lim\0"
/*   417 */ "make-gperf\0"
/*   428 */ "make-header-guard\0"
/*   446 */ "make-tmp-dir\0"
/*   459 */ "makefile-script\0"
/*   475 */ "match-value?\0"
/*   488 */ "max\0"
/*   492 */ "min\0"
/*   496 */ "mk-gettextable\0"
/*   511 */ "out-delete\0"
/*   522 */ "out-depth\0"
/*   532 */ "out-emit-suspended\0"
/*   551 */ "out-line\0"
/*   560 */ "out-move\0"
/*   569 */ "out-name\0"
/*   578 */ "out-pop\0"
/*   586 */ "out-push-add\0"
/*   599 */ "out-push-new\0"
/*   612 */ "out-resume\0"
/*   623 */ "out-suspend\0"
/*   635 */ "out-switch\0"
/*   646 */ "output-file-next-line\0"
/*   668 */ "prefix\0"
/*   675 */ "printf\0"
/*   682 */ "raw-shell-str\0"
/*   696 */ "set-option\0"
/*   707 */ "set-writable\0"
/*   720 */ "shell\0"
/*   726 */ "shell-str\0"
/*   736 */ "shellf\0"
/*   743 */ "sprintf\0"
/*   751 */ "stack\0"
/*   757 */ "string-capitalize\0"
/*   775 */ "string-capitalize!\0"
/*   794 */ "*=*\0"
/*   798 */ "*==*\0"
/*   803 */ "string-downcase\0"
/*   819 */ "string-downcase!\0"
/*   836 */ "*~\0"
/*   839 */ "*~~\0"
/*   843 */ "*=\0"
/*   846 */ "*==\0"
/*   850 */ "==\0"
/*   853 */ "~\0"
/*   855 */ "=\0"
/*   857 */ "*~*\0"
/*   861 */ "*~~*\0"
/*   866 */ "~~\0"
/*   869 */ "~*\0"
/*   872 */ "~~*\0"
/*   876 */ "=*\0"
/*   879 */ "==*\0"
/*   883 */ "string-substitute\0"
/*   901 */ "string->c-name!\0"
/*   917 */ "string->camelcase\0"
/*   935 */ "string-tr\0"
/*   945 */ "string-tr!\0"
/*   956 */ "string-upcase\0"
/*   970 */ "string-upcase!\0"
/*   985 */ "sub-shell-str\0"
/*   999 */ "suffix\0"
/*  1006 */ "sum\0"
/*  1010 */ "time-string->number\0"
/*  1030 */ "tpl-file\0"
/*  1039 */ "tpl-file-line\0"
/*  1053 */ "tpl-file-next-line\0"
/*  1072 */ "version-compare";

    NEW_PROC(g_nm +   0, 2, 0, 1, ag_fprintf);
    NEW_PROC(g_nm +  11, 1, 0, 0, ag_function_p);
    NEW_PROC(g_nm +  24, 2, 0, 0, agpl);
    NEW_PROC(g_nm +  29, 0, 0, 0, base_name);
    NEW_PROC(g_nm +  39, 3, 0, 0, bsd);
    NEW_PROC(g_nm +  43, 1, 0, 0, c_string);
    NEW_PROC(g_nm +  52, 1, 0, 0, chdir);
    NEW_PROC(g_nm +  58, 1, 0, 0, count);
    NEW_PROC(g_nm +  64, 0, 0, 0, def_file);
    NEW_PROC(g_nm +  73, 1, 1, 0, def_file_line);
    NEW_PROC(g_nm +  87, 1, 2, 0, dne);
    NEW_PROC(g_nm +  91, 0, 0, 1, emit);
    NEW_PROC(g_nm +  96, 1, 0, 0, error);
    NEW_PROC(g_nm + 102, 0, 0, 0, error_source_line);
    NEW_PROC(g_nm + 120, 1, 0, 0, exist_p);
    NEW_PROC(g_nm + 127, 2, 2, 0, extract);
    NEW_PROC(g_nm + 135, 1, 1, 0, find_file);
    NEW_PROC(g_nm + 145, 0, 1, 0, first_for_p);
    NEW_PROC(g_nm + 156, 1, 0, 0, for_by);
    NEW_PROC(g_nm + 163, 1, 0, 0, for_from);
    NEW_PROC(g_nm + 172, 0, 1, 0, for_index);
    NEW_PROC(g_nm + 182, 1, 0, 0, for_sep);
    NEW_PROC(g_nm + 190, 1, 0, 0, for_to);
    NEW_PROC(g_nm + 197, 1, 0, 0, format_arg_count);
    NEW_PROC(g_nm + 214, 0, 1, 0, found_for_p);
    NEW_PROC(g_nm + 225, 2, 0, 1, fprintf);
    NEW_PROC(g_nm + 233, 1, 1, 0, get);
    NEW_PROC(g_nm + 237, 1, 0, 0, get_c_name);
    NEW_PROC(g_nm + 248, 1, 0, 0, get_down_name);
    NEW_PROC(g_nm + 262, 1, 0, 0, get_up_name);
    NEW_PROC(g_nm + 274, 2, 0, 0, gperf);
    NEW_PROC(g_nm + 280, 2, 0, 0, gpl);
    NEW_PROC(g_nm + 284, 2, 0, 0, hide_email);
    NEW_PROC(g_nm + 295, 1, 0, 0, high_lim);
    NEW_PROC(g_nm + 304, 1, 0, 1, in_p);
    NEW_PROC(g_nm + 308, 1, 0, 1, join);
    NEW_PROC(g_nm + 313, 1, 0, 0, kr_string);
    NEW_PROC(g_nm + 323, 0, 1, 0, last_for_p);
    NEW_PROC(g_nm + 333, 1, 0, 0, len);
    NEW_PROC(g_nm + 337, 3, 0, 0, lgpl);
    NEW_PROC(g_nm + 342, 4, 0, 0, license);
    NEW_PROC(g_nm + 350, 3, 1, 0, license_description);
    NEW_PROC(g_nm + 370, 3, 2, 0, license_full);
    NEW_PROC(g_nm + 383, 3, 2, 0, license_info);
    NEW_PROC(g_nm + 396, 1, 0, 0, license_name);
    NEW_PROC(g_nm + 409, 1, 0, 0, low_lim);
    NEW_PROC(g_nm + 417, 1, 0, 1, make_gperf);
    NEW_PROC(g_nm + 428, 1, 0, 0, make_header_guard);
    NEW_PROC(g_nm + 446, 0, 0, 0, make_tmp_dir);
    NEW_PROC(g_nm + 459, 1, 0, 0, makefile_script);
    NEW_PROC(g_nm + 475, 3, 0, 0, match_value_p);
    NEW_PROC(g_nm + 488, 0, 0, 1, max);
    NEW_PROC(g_nm + 492, 0, 0, 1, min);
    NEW_PROC(g_nm + 496, 1, 0, 0, mk_gettextable);
    NEW_PROC(g_nm + 511, 0, 0, 0, out_delete);
    NEW_PROC(g_nm + 522, 0, 0, 0, out_depth);
    NEW_PROC(g_nm + 532, 1, 0, 0, out_emit_suspended);
    NEW_PROC(g_nm + 551, 0, 0, 0, out_line);
    NEW_PROC(g_nm + 560, 1, 0, 0, out_move);
    NEW_PROC(g_nm + 569, 0, 0, 0, out_name);
    NEW_PROC(g_nm + 578, 0, 1, 0, out_pop);
    NEW_PROC(g_nm + 586, 1, 0, 0, out_push_add);
    NEW_PROC(g_nm + 599, 0, 1, 0, out_push_new);
    NEW_PROC(g_nm + 612, 1, 0, 0, out_resume);
    NEW_PROC(g_nm + 623, 1, 0, 0, out_suspend);
    NEW_PROC(g_nm + 635, 1, 0, 0, out_switch);
    NEW_PROC(g_nm + 646, 0, 2, 0, output_file_next_line);
    NEW_PROC(g_nm + 668, 2, 0, 0, prefix);
    NEW_PROC(g_nm + 675, 1, 0, 1, printf);
    NEW_PROC(g_nm + 682, 1, 0, 0, raw_shell_str);
    NEW_PROC(g_nm + 696, 1, 0, 0, set_option);
    NEW_PROC(g_nm + 707, 0, 1, 0, set_writable);
    NEW_PROC(g_nm + 720, 0, 0, 1, shell);
    NEW_PROC(g_nm + 726, 1, 0, 0, shell_str);
    NEW_PROC(g_nm + 736, 1, 0, 1, shellf);
    NEW_PROC(g_nm + 743, 1, 0, 1, sprintf);
    NEW_PROC(g_nm + 751, 1, 0, 0, stack);
    NEW_PROC(g_nm + 757, 1, 0, 0, string_capitalize);
    NEW_PROC(g_nm + 775, 1, 0, 0, string_capitalize_x);
    NEW_PROC(g_nm + 794, 2, 0, 0, string_contains_eqv_p);
    NEW_PROC(g_nm + 798, 2, 0, 0, string_contains_p);
    NEW_PROC(g_nm + 803, 1, 0, 0, string_downcase);
    NEW_PROC(g_nm + 819, 1, 0, 0, string_downcase_x);
    NEW_PROC(g_nm + 836, 2, 0, 0, string_end_eqv_match_p);
    NEW_PROC(g_nm + 839, 2, 0, 0, string_end_match_p);
    NEW_PROC(g_nm + 843, 2, 0, 0, string_ends_eqv_p);
    NEW_PROC(g_nm + 846, 2, 0, 0, string_ends_with_p);
    NEW_PROC(g_nm + 850, 2, 0, 0, string_equals_p);
    NEW_PROC(g_nm + 853, 2, 0, 0, string_eqv_match_p);
    NEW_PROC(g_nm + 855, 2, 0, 0, string_eqv_p);
    NEW_PROC(g_nm + 857, 2, 0, 0, string_has_eqv_match_p);
    NEW_PROC(g_nm + 861, 2, 0, 0, string_has_match_p);
    NEW_PROC(g_nm + 866, 2, 0, 0, string_match_p);
    NEW_PROC(g_nm + 869, 2, 0, 0, string_start_eqv_match_p);
    NEW_PROC(g_nm + 872, 2, 0, 0, string_start_match_p);
    NEW_PROC(g_nm + 876, 2, 0, 0, string_starts_eqv_p);
    NEW_PROC(g_nm + 879, 2, 0, 0, string_starts_with_p);
    NEW_PROC(g_nm + 883, 3, 0, 0, string_substitute);
    NEW_PROC(g_nm + 901, 1, 0, 0, string_to_c_name_x);
    NEW_PROC(g_nm + 917, 1, 0, 0, string_to_camelcase);
    NEW_PROC(g_nm + 935, 3, 0, 0, string_tr);
    NEW_PROC(g_nm + 945, 3, 0, 0, string_tr_x);
    NEW_PROC(g_nm + 956, 1, 0, 0, string_upcase);
    NEW_PROC(g_nm + 970, 1, 0, 0, string_upcase_x);
    NEW_PROC(g_nm + 985, 1, 0, 0, sub_shell_str);
    NEW_PROC(g_nm + 999, 0, 0, 0, suffix);
    NEW_PROC(g_nm +1006, 0, 0, 1, sum);
    NEW_PROC(g_nm +1010, 1, 0, 0, time_string_to_number);
    NEW_PROC(g_nm +1030, 0, 1, 0, tpl_file);
    NEW_PROC(g_nm +1039, 0, 1, 0, tpl_file_line);
    NEW_PROC(g_nm +1053, 0, 1, 0, tpl_file_next_line);
    NEW_PROC(g_nm +1072, 3, 0, 0, version_compare);
}
#undef NEW_PROC
/** @} */
/* end of expr.ini */
